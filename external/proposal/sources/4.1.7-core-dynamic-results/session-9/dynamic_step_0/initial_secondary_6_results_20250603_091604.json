{
  "totalHits": 80843,
  "limit": 1,
  "offset": 0,
  "results": [
    {
      "acceptedDate": "",
      "arxivId": "1708.06414",
      "authors": [
        {
          "name": "Attree, Sandeep"
        },
        {
          "name": "Patel, Sourav"
        },
        {
          "name": "Prakash, Mangal"
        },
        {
          "name": "Salapaka, Murti V."
        },
        {
          "name": "Talukdar, Saurav"
        }
      ],
      "citationCount": 0,
      "contributors": [
        "Sourav"
      ],
      "outputs": [
        "https://api.core.ac.uk/v3/outputs/467399917"
      ],
      "createdDate": "2017-10-17T02:36:57",
      "dataProviders": [
        {
          "id": 144,
          "name": "",
          "url": "https://api.core.ac.uk/v3/data-providers/144",
          "logo": "https://api.core.ac.uk/data-providers/144/logo"
        },
        {
          "id": 4786,
          "name": "",
          "url": "https://api.core.ac.uk/v3/data-providers/4786",
          "logo": "https://api.core.ac.uk/data-providers/4786/logo"
        }
      ],
      "depositedDate": "",
      "abstract": "Greater penetration of Distributed Energy Resources (DERs) in power networks\nrequires coordination strategies that allow for self-adjustment of\ncontributions in a network of DERs, owing to variability in generation and\ndemand. In this article, a distributed scheme is proposed that enables a DER in\na network to arrive at viable power reference commands that satisfies the DERs\nlocal constraints on its generation and loads it has to service, while, the\naggregated behavior of multiple DERs in the network and their respective loads\nmeet the ancillary services demanded by the grid. The Net-load Management\nsystem for a single unit is referred to as the Local Inverter System (LIS) in\nthis article . A distinguishing feature of the proposed consensus based\nsolution is the distributed finite time termination of the algorithm that\nallows each LIS unit in the network to determine power reference commands in\nthe presence of communication delays in a distributed manner. The proposed\nscheme allows prioritization of Renewable Energy Sources (RES) in the network\nand also enables auto-adjustment of contributions from LIS units with lower\npriority resources (non-RES). The methods are validated using\nhardware-in-the-loop simulations with Raspberry PI devices as distributed\ncontrol units, implementing the proposed distributed algorithm and responsible\nfor determining and dispatching realtime power reference commands to simulated\npower electronics interface emulating LIS units for demand response.Comment: 7 pages, 11 Figures, IEEE International Conference on Smart Grid\n  Communication",
      "documentType": "research",
      "doi": "10.1109/smartgridcomm.2017.8340735",
      "downloadUrl": "http://arxiv.org/abs/1708.06414",
      "fieldOfStudy": null,
      "fullText": "Distributed Apportioning in a Power Network for\nproviding Demand Response Services\nSourav Patel, Sandeep Attree, Saurav Talukdar, Mangal Prakash, Murti V. Salapaka\nDepartment of Electrical and Computer Engineering\nUniversity of Minnesota\n{patel292, attree002, taluk005, praka027, murtis}@umn.edu\nAbstract\u2014Greater penetration of Distributed Energy Re-\nsources (DERs) in power networks requires coordination strate-\ngies that allow for self-adjustment of contributions in a network\nof DERs, owing to variability in generation and demand. In this\narticle, a distributed scheme is proposed that enables a DER in\na network to arrive at viable power reference commands that\nsatisfies the DERs local constraints on its generation and loads it\nhas to service, while, the aggregated behavior of multiple DERs in\nthe network and their respective loads meet the ancillary services\ndemanded by the grid. The Net-load Management system for a\nsingle unit is referred to as the Local Inverter System (LIS) in this\narticle . A distinguishing feature of the proposed consensus based\nsolution is the distributed finite time termination of the algorithm\nthat allows each LIS unit in the network to determine power\nreference commands in the presence of communication delays in a\ndistributed manner. The proposed scheme allows prioritization of\nRenewable Energy Sources (RES) in the network and also enables\nauto-adjustment of contributions from LIS units with lower\npriority resources (non-RES). The methods are validated using\nhardware-in-the-loop simulations with Raspberry PI devices as\ndistributed control units, implementing the proposed distributed\nalgorithm and responsible for determining and dispatching real-\ntime power reference commands to simulated power electronics\ninterface emulating LIS units for demand response.\n1. INTRODUCTION\nThe existing power grid network is in the process of tran-\nsitioning from a framework, where conventional large power\nplants generate at one end while loads consume at the other,\ntowards integration of large number of smaller distributed\ngeneration (DG) units scattered throughout the network to\nprovide ancillary services and support the power grid [1], [2],\n[3]. The coordination of multiple distributed generation units\npresents significant challenges. [4] and [5] provide a review of\nworks that have employed a centralized approach to solve the\nproblem of aggregating and coordinating Distributed Energy\nResources (DERs), where a secondary centralized controller\ndispatches commands to DERs and requires information from\nall of the DERs, in many cases is not tenable. A distributed\nmethod for grid ancillary services has a number of advantages\nover centralized architecture as enumerated below:\n1) Distributed co-ordination is achieved using only local\ncomputations (which reduces communication overheads\nand congestion) pertaining only to the neighborhood of\nthe DER.\n2) Distributed coordination facilitates \u2018plug and play\u2019 ca-\npability, where a new DER that needs to connect to\nthe network requires communication only to its nearest\navailable DER.\n3) Distributed architecture is resilient to failures as any\nparticular node failure does not lead to failure of the\nentire network.\nThe objective of this article is to meet the grid ancillary\ndemand (global objective) by using an aggregation of DERs\nforming a network while respecting their local generation and\ndemand constraints in a distributed manner. In this regard, we\npropose a distributed resource apportioning framework that\nis suitable for real-time implementation. We envision the use\nof ultra low-cost computing devices like Raspberry Pi (R-\nPi) acting as control and communication agents in the DER\nnetwork. The wireless communication channel between R-\nPis suffers from time varying (stochastic) delays, which for\npractical purposes can be considered to be bounded (see Figure\n5(b)). The distributed resource apportioning solution proposed\nhere is robust to the presence of bounded communication\ndelays between the DERs\u2019 communication devices.\nRatio consensus algorithm for distributed coordination of\nDERs to meet the ancillary service demand is presented in [6].\nThe ratio consensus algorithm is used to compute the power\nreference commands for the DERs based on their generation\ncapacities. However, the convergence of ratio consensus\nto the power reference command values is asymptotic in\nnature and hence, unsuitable for real time implementation.\nTo circumvent this issue, a distributed finite time termination\nof ratio consensus is presented in [7], which builds on ideas\npresented in [6] and [8] for frequency regulation in a network\nof islanded AC micro grids. However, none of the works\ndiscussed above address the issue of communication delays\nin ratio consensus and the method for distributed termination\nis not present. Distributed finite time termination of ratio\nconsensus in the presence of bounded delays is presented in\n[9] but it does not adhere to distributed resource apportioning\nand coordination of DERs in the presence of communication\ndelays. Figure 1 shows experimental results for implementing\nratio consensus algorithm on a 5 node network for averaging\nof initial values without accounting for any communication\ndelays. Ignoring communication delays results in a converged\nvalue of 225, that is, an error of 43.75% from the true average\nof 400. This motivates the need to address the challenges\nof communication delays for successful implementation of\ndistributed consensus algorithms for real-time applications\nsuch as power networks. Furthermore, the power network\nrelies on a number of measurements and communicating\nthese measurements among control units for purposes of\nar\nX\niv\n:1\n70\n8.\n06\n41\n4v\n1 \n [c\ns.S\nY]\n  2\n1 A\nug\n 20\n17\n0 10 20 30 40\nNumber of iterations\n0\n200\n400\n600\n800\n1000\nAg\nent\n va\nlue\nAgent 1\nAgent 2\nAgent 3\nAgent 4\nAgent 5\nAverage\n(a) (b)\nFig. 1. (a) 5 node network with initial conditions, (b) experimental\nresults for the 5 node network when communication delays are not\nconsidered converge at a value different than the true average.\nFig. 2. Residential scale LIS unit with generation sources and local\nloads\neffective control [10]. Ignoring communication delays could\nresult in a destabilizing effect on the entire system or any\npart thereof; hence, it is important that communication delays\nare taken care of for meeting performance specifications.\nIn this article we present a distributed scheme for apportion-\ning the share of resources that a DER has to provide toward\nmeeting a global demand while satisfying local load demands.\nThe effectiveness of the algorithm is demonstrated by execut-\ning the algorithm on real devices (Raspberry Pis) where the\npower reference commands, obtained from the termination of\nratio consensus, are implemented in a hardware in the loop\nsimulation with Simulink. We use a number of basic notions\nfrom graph theory and linear algebra which are essential for\nthe subsequent developments. Detailed description of these\nnotions are available in [11] and [12].\nIn the next section we provide an overview of the Local\nInverter System (LIS), the associated network topology as well\nas the resource apportioning problem.\n2. LOCAL INVERTER SYSTEMS\nA. System Topology\nA residential level local inverter system (Figure 2) consists\nof an array of distributed generation sources (such as PV, EV,\nbattery) interfaced with DC-DC converters, DC Link Capacitor\nand DC-AC inverters to serve local AC loads. Utility scale\nLIS unit consists of an utility scale inverter with a PV array\nto meet ancillary demand services of the grid and/or a network\nof residential LIS units. The output of an LIS unit is connected\nthrough a point of common coupling (PCC) to other LIS units\nin a peer-to-peer microgrid or to the grid through an aggregator\n(described later) when in grid-connected mode.\nFig. 3. (a) Bidirectional DC-DC Converter realizations for DERs in a\nResidential LIS unit where q(t) is the desired duty ratio input, (b) A single\nLIS unit with N DERs implementing power-voltage droop control and inner-\ncontrol loops for voltage regulation and load sharing.\nFig. 4. Aggregator injecting grid ancillary demand \u03c1d at node LIS 2 in a\n6-node LIS network.\nConsider a single LIS unit with N DERs connected in\nparallel. A power-voltage droop control is implemented for\neach DC-DC converter unit as described in [13] and extended\nto the parallel converter system of Figure 3. The Power output\nof jth DC-DC converter, Pj , is compared against a desired\nreference power output set point, P \u2217j , demanded from the j\nth\nDER. A suitable droop coefficient \u03b7j is chosen that generates\nvoltage reference set point Vrefj according to equation (1) for\nthe inner loop controller. Thus,\nVrefj = V\n\u2217 \u2212 \u03b7j(Pj \u2212 P \u2217j ). (1)\nThe inner-loop controller consists of a voltage controller\nloop that generates a current reference signal irefj and a fast\ncurrent controller loop for voltage regulation of the jth DC-DC\nConverter. An extensive design of such inner-loop controller\nis proposed in [14] that implements a decentralized control ar-\nchitecture for load sharing among multiple parallel converters\nsimilar to the topology proposed here. The converter devices\nare assumed to be lossless in this article. The reactive power\nflow is assumed to be zero in the network and transmission\nlines are considered to be lossless.\nB. Network of LIS units\nAn Aggregator as shown in Figure 4 is an entity that injects\nthe grid ancillary demand into the network of LIS units, which\nthen becomes the global objective of the network. Consider a\nnetwork of I = {1, 2, ..., n} LIS units, where, the jth LIS unit\nhas Ej DERs and Lj loads. The generation capacity of the\njth LIS unit, pijg :=\n\u2211Ej\nm=1 pi\nj\ngm , where, pi\nj\ngm is the generation\ncapacity of the mth DER in the jth LIS unit. The local load\ndemand of the jth LIS unit, pijl :=\n\u2211Lj\nm=1 pi\nj\nlm\n, where, pijlm is\nthe demand of the mth load in the jth LIS unit. At a given\ninstant, the jth LIS unit is said to have a net reserve Rj , where,\nRj =\nEj\u2211\nm=1\npijgm \u2212\nLj\u2211\nm=1\npijlm for all j = 1, 2, ..., n. (2)\nIf the net reserve Rj > 0, LIS unit j behaves as a network\nsource otherwise it is a network load. In this article, we assume\nall LIS units act as sources to meet the grid demand \u03c1d;\nextending the resource apportioning framework to the case\nwhere there is a mix of source and load LIS units is a simple\nextension.\nThe LIS units communicate with each other as dictated by\nthe network topology through wireless channels. This com-\nmunication link is represented as a bidirectional edge in the\nnetwork and results in an undirected graph. Delays are inherent\nbecause of the presence of wireless communication channels\nbetween control units of LIS units, and are assumed to be fixed\nand uniformly bounded for simplicity of presentation and the\nHIL validation is for the stochastic but bounded delay case.\nC. Resource Apportioning Problem\nThe network of LIS units can be viewed as a multi agent\nsystem with the agents interacting with their neighbors over\na communication network. Each LIS unit is considered as\na node and each communication link between LIS units is\nconsidered as an undirected edge in a graph G = (V,E),\nwhere, V denotes the set of nodes and E denotes the set of\nedges. The central aggregator requests that a total resource \u03c1d\nbe supplied, which has to be collectively provided by the n LIS\nunits, while respecting their individual resource constraints.\nLet pi\u2217i be the amount of resource supplied by the i\nth LIS\nunit, where pimini and pi\nmax\ni represent the minimum and the the\nmaximum amount of power ith agent can supply respectively.\nThe objective is to determine {pi\u2217i }i\u2208V such that,\npimini \u2264 pi\u2217i \u2264 pimaxi and\n\u2211\ni\u2208V\npi\u2217i = \u03c1d.\nWe refer to the problem of determining pi\u2217i respecting the\nabove constraints as the resource apportioning problem. We\nassume that\n\u2211n\ni=1 pi\nmin\ni \u2264 \u03c1d \u2264\n\u2211n\ni=1 pi\nmax\ni holds to ensure\nfeasibility of the resource allocation problem. Let \u03c4ij denote\nthe delay in the communication link from node j to node i. The\ncommunication delay in each link is assumed to be constant\nand bounded by \u03c4\u00af . We present below an approach which meets\nthe demand \u03c1d asymptotically while respecting the constraints\nof each agent via a distributed iterative algorithm where each\nnode updates its state based on its current state and the state\nof its neighbors.\n3. RESOURCE APPORTIONING USING DISTRIBUTED\nAVERAGING\nThe resource apportioning problem in the presence of\nbounded communication delays between LIS units can be\nsolved by using average consensus protocols which incor-\nporates delays. We first summarize below the distributed\naveraging protocol in presence of bounded delays as presented\nin [15].\nA. Distributed Averaging Protocol\nA1. Let pij denote the weight on the information coming\nfrom node j to node i. Weight matrix [P ](i, j) = pij\nassociated with the undirected graph is primitive and\ncolumn stochastic.\nA2. The undirected graph G = (V,E) is connected.\nA3. Any node i \u2208 V in the undirected graph G = (V,E)\nhas access to its own value at any instant k without any\ndelay.\nA4. The delay on the edge from node j to i, \u03c4ij is bounded by\nsome constant \u03c4\u00af , for all i, j \u2208 V , that is, \u03c4ij \u2264 \u03c4\u00af <\u221e.\nUnder the assumptions A1-A4 consider the iterations,\nxi(k + 1) = piixi(k) +\n\u2211\nj\u2208Ni\u2212\npijxj(k \u2212 \u03c4ij), (3)\nwi(k + 1) = piiwi(k) +\n\u2211\nj\u2208Ni\u2212\npijwj(k \u2212 \u03c4ij), (4)\nwith the initial conditions be given by x(0) =\n[x1(0) x2(0)...xn(0)]\nT and w(0) = 1n where 1n is a\nn\u00d7 1 column vector of all ones. Then the ratio of xi(k) and\nwi(k) asymptotically converges to lim\nk\u2192\u221e\n\u00b5j(k) =\n\u2211n\ni=1xi(0)\nn\nfor all j = 1, ..., n, where \u00b5j(k) := xj(k)/wj(k) [15].\nRemark 1. The weight matrix being column stochastic en-\nables the weights pij to be chosen in a distributed manner. A\nsimple scheme for choosing the weights are pji = 1D+i +1\nfor\nall j \u2208 {N+i \u222a i}.\nNow we use the distributed averaging based on (3) and (4)\nfor distributed resource allocation. Suppose that the resource\ndemanding authority, which is referred to as the aggregator\ncan communicate to p agents out of n (1 \u2264 p \u2264 n) and\nsend across its demand \u03c1d. The nodes to which the aggregator\nrelays its demand are called demand circulation nodes and the\nset of such nodes is denoted by Nd. Suppose that each node\nhas three states, [ri(k), si(k), ti(k)]T such that,\nri(k + 1) = piiri(k) +\n\u2211\nj\u2208N\u2212i\npijrj(k \u2212 \u03c4ij), (5)\nri(0) =\n\u03c1d\np\n\u2212 pimini if i \u2208 Nd or\nri(0) = \u2212pimini if i 6\u2208 Nd,\nsi(k + 1) = piisi(k) +\n\u2211\nj\u2208N\u2212i\npijsj(k \u2212 \u03c4ij), (6)\nsi(0) = pi\nmax\ni \u2212 pimini , for all i \u2208 V,\nti(k + 1) = piiti(k) +\n\u2211\nj\u2208N\u2212i\npijtj(k \u2212 \u03c4ij), (7)\nti(0) = 1, for all i \u2208 V,\nwhere, pimaxi and pi\nmin\ni denote the maximum and minimum\npower availability from the ith LIS unit. It follows from\nthe above discussion that, lim\nk\u2192\u221e\nri(k)\nti(k)\n=\n\u03c1d \u2212\nn\u2211\nj=1\npiminj\nn\n, and\nlim\nk\u2192\u221e\nsi(k)\nti(k)\n=\nn\u2211\nj=1\n(pimaxj \u2212 piminj )\nn\n, for all i \u2208 V.\nTheorem 3.1. Let the power reference command for the ith\nLIS unit be defined as, pi\u2217i := pi\nmin\ni + lim\nk\u2192\u221e\nri(k)\nsi(k)\n(pimaxi \u2212\npimini ). Then\nn\u2211\ni=1\npi\u2217i = \u03c1d and pi\nmin\ni \u2264 pi\u2217i \u2264 pimaxi for all\ni \u2208 V .\nProof. It follows from the above discussion that,\npi\u2217i = pi\nmin\ni +\n\u03c1d \u2212\nn\u2211\nj=1\npiminj\nn\u2211\nj=1\n(pimaxj \u2212 piminj )\n(pimaxi \u2212 pimini ), for all i \u2208 V.\nIt is clear from the feasibility of demand \u03c1d that, pimini \u2264\npi\u2217i \u2264 pimaxi . Moreover, it follows that,\nn\u2211\ni=1\npi\u2217i = \u03c1d.\nThis completes the proof.\nTheorem 3.1 provides a distributed protocol to allocate\nresources to meet the demand \u03c1d. It is an extension of the ratio\nconsensus approach for resource apportioning presented in [6]\nto incorporate communication delays between the agents. It\nshould be noted that the result in Theorem 3.1 is asymp-\ntotic. Thus, the agents in principle keep updating their states\n(using (5),(6),(7)) forever without termination, which makes\nit untenable from a real time implementation perspective.\nOne needs to terminate the computations at each node in a\ndistributed manner when the sum of the contribution from\neach node is \u2018close\u2019 to \u03c1d. This problem of distributed finite\ntime termination of resource apportioning is dealt in the next\nsection.\n4. DISTRIBUTED FINITE TIME TERMINATION OF\nRESOURCE APPORTIONING\nIn this section, first results based on the update rules (3) and\n(4) are established followed by the definitions and convergence\nof Max-Min consensus algorithms. Subsequently, a finite-time\ntermination criterion for average consensus is developed based\non these results. Let us consider the maximum and minimum\nvalue of the ratio of consensus protocols given by (1) and (4)\nover all nodes within a horizon \u03c4\u00af from any time instant k be\ngiven by,\nM(k) := max\nj\u2208V\nr={0,1,2,...,\u03c4\u00af}\nxj(k \u2212 r)\nwj(k \u2212 r) , wj(k \u2212 r) 6= 0, j \u2208 V (8)\nm(k) := min\nj\u2208V\nr={0,1,2,...,\u03c4\u00af}\nxj(k \u2212 r)\nwj(k \u2212 r) , wj(k \u2212 r) 6= 0, j \u2208 V (9)\nRemark 2. It is shown in [9] that {M(k)}k\u2208N and\n{m(k)}k\u2208N converges to\n\u2211n\nj=1 xj(0)\nn .\nRemark 3. Given that wj(0) = 1 for all j \u2208 V and P is a\nnon-negative matrix, wj(k) 6= 0 for all k \u2208 N.\nNext, we introduce the Maximum Consensus and Minimum\nConsensus protocols.\nA. Maximum and Minimum Consensus Protocols [16]\nMaximum Consensus Protocol (MXP) computes the\nmaximum of the given initial node conditions z(0) =\n[z1(0) z2(0)....zn(0)]\nT in a distributed manner. It takes z(0)\nas an input and generates a sequence of node values based on\nthe following update rule for node i,\nzi(k\u03c4\u00af + q) = zi(k\u03c4\u00af + q \u2212 1), q \u2208 {k + 1, k + 2, \u00b7 \u00b7 \u00b7 , k + \u03c4\u00af},\nzi((k + 1)(\u03c4\u00af + 1)) =\nmax\nj\u2208N\u2212i \u222a{i}\nzj((k + 1)(\u03c4\u00af + 1)\u2212 (\u03c4ij + 1)) for k \u2265 0. (10)\nThe Minimum Consensus Protocol (MNP) computes the\nminimum of the given initial node conditions y(0) =\n[y1(0) y2(0)....yn(0)]\nT in a distributed manner. It takes y(0) as\nan input and generates a sequence of node values y(k) based\non the following update rule:\nyi(k\u03c4\u00af + q) = yi(k\u03c4\u00af + q \u2212 1), q \u2208 {k + 1, k + 2, \u00b7 \u00b7 \u00b7 , k + \u03c4\u00af},\nyi((k + 1)(\u03c4\u00af + 1)) =\nmin\nj\u2208N\u2212i \u222a{i}\nyj((k + 1)(\u03c4\u00af + 1)\u2212 (\u03c4ij + 1)), for k \u2265 0. (11)\nRemark 4. MXP and MNP converge to the maximum and\nminimum of the initial conditions respectively in D(1 + \u03c4\u00af)\niterations, where D is the diameter of the network [16].\nB. Distributed Finite Time Termination of Resource Appor-\ntioning\nIn this section, we propose an algorithm using the MXP-\nMNP for stopping the ratio consensus protocol in finite time\nbased on a user-specified threshold \u03c1. This framework first\nappeared in [7] as an extension of the Max-Min consensus\nbased finite time termination of averaging consensus [8].\nHowever, [7], [8] do not consider any communication de-\nlays in the network and [8] is based on the weight matrix\nP being doubly stochastic thereby restrictive in the sense\nof distributed selection of the edge weights. A MXP-MNP\nframework for finite time termination of ratio consensus ((3)\nand (4)) with uniformly bounded communication delays and\ncolumn stochastic weight matrix is reported in [9]. We apply\nthe results in [9] for distributed finite time termination of the\nnumerator and denominator ratio consensus protocol as shown\nin Algorithm 1. The initial conditions for the MXP and MNP\nprotocols are set as the initial ratio held by the nodes, that\nis, zi(0) = ri(0)/si(0) and yi(0) = ri(0)/si(0). The MXP\nand MNP protocols at each node i \u2208 V are re-initialized at\nk = \u03b8(D(1 + \u03c4\u00af) + \u03c4\u00af), where \u03b8 = 1, 2, ..., with zi(k) =\nri(k)\nsi(k)\nand yi(k) =\nri(k)\nsi(k)\n. Given a threshold \u03c1 > 0, it is proven in\n[9] that Algorithm 1 terminates in finite number of iterations.\nNote that {ti}i\u2208V iterations were used for analysis only and\nis not required to be maintained at the nodes as its effect is\ncancelled.\nAlgorithm 1: Distributed finite-time termination of re-\nsource apportioning in presence of communication delays\n(at each node i \u2208 V )\nRepeat:\nInput:\npimini , pi\nmax\ni , \u03c1d, p\n\u03c1, \u03c4\u00af , D\nInitialize:\nri(0) =\n\u03c1d\np \u2212pimini , if i \u2208 Nd, else ri(0) = \u2212pimini ;\nsi(0) = pi\nmax\ni \u2212 pimini ;\nk := 0;\nzi := ri(0)/si(0);\nyi := ri(0)/si(0);\nl := 1;\n\u03b8 := 1;\nRepeat:\n/* ratio consensus updates of node\ni given by (3) and (4) */\nri(k + 1) := piiri(k) +\n\u2211\nj\u000fN\u2212i\npijrj(k \u2212 \u03c4ij);\nsi(k + 1) := piisi(k) +\n\u2211\nj\u000fN\u2212i\npijsj(k \u2212 \u03c4ij);\nif k + 1 = l(1 + \u03c4\u00af) then\n/* maximum and minimum\nconsensus updates given by\n(10) and (11) for each node\ni \u2208 V */\nzi := max\nj\u2208N\u2212i \u222a{i}\nzj ;\nyi := min\nj\u2208N\u2212i \u222a{i}\nyj ;\nl := l + 1\nend\nemit: ri(k + 1), si(k + 1), yi and zi\nif k + 1 = \u03b8(D(1 + \u03c4\u00af) + \u03c4\u00af) then\nif zi \u2212 yi < \u03c1 then\nr\u2217i = ri(k + 1);\ns\u2217i = si(k + 1);\nbreak ; // stop ri, si, yi and zi\nupdates\nelse\nzi :=\nri(\u03b8(D(1+ \u03c4\u00af)+ \u03c4\u00af))/si(\u03b8(D(1+ \u03c4\u00af)+ \u03c4\u00af));\nyi :=\nri(\u03b8(D(1+ \u03c4\u00af)+ \u03c4\u00af))/si(\u03b8(D(1+ \u03c4\u00af)+ \u03c4\u00af));\n\u03b8 := \u03b8 + 1;\nend\nend\nk = k + 1\npi\u2217i := pi\nmin\ni +\nr\u2217i\ns\u2217i\n(pimaxi \u2212 pimini ) // power\nreference command for node i \u2208 V\nRemark 5. The MXP and MNP iterations can be used to\ncompute \u03b2i(\u03b8) in a distributed manner at each node. Algorithm\n1 presented below uses \u03b2i(\u03b8) < \u03c1 as a stopping criteria\nfor termination of (5) and (6). It computes the approxi-\nmate limiting ratio r\u2217i /s\n\u2217\ni (each node converges \u2018close\u2019 to\nlim\nk\u2192\u221e\nri(k)/si(k)) in a distributed manner. The only global\nparameters needed by each node are upper bounds on both\nthe maximum delay and diameter of the network.\n5. RESULTS\nHardware in the loop (HIL) simulations are performed on a\nnetwork of 6 LIS units as shown in Figure 4 for demonstrating\nthe applicability of the algorithm presented. Each LIS unit\nis equipped with a Raspberry-PI 3 (Model B V1.2) (see\nFigure 5 (a)) [17] module for control and communication\nwith other LIS units. R-PI 3 implements 802.11n Wireless\nstandard that allows for a larger range of communication with\nfaster data transmission speeds [18]. LIS units communicate\nin their respective neighborhoods (Figure 4) wirelessly. Figure\n5 (b) shows pairwise communication delays experienced by\nR-PI units. These delays are due to inherent uncertainties in\nthe communication channel as well as those modeled for the\nexperiment.\nIf an LIS unit has RES, then it has a time dependent gen-\neration profile associated with it because of the variability in\nenvironmental parameters that impact generation, otherwise a\nfixed maximum and minimum generation capacity is assumed.\nFor the considered topology as depicted in Figure 4, D = 3,\n\u03c4\u00af = 3 and the weight matrix P (column stochastic) is chosen\ndistributively as described in Remark 1. Let the grid ancillary\ndemand, \u03c1d be 7000 W. In this simulation, LIS 2 is chosen to\nbe a RES, which is a PV array operating in Maximum Power\nPoint Tracking (MPPT) mode [19] with a suitable profile\nselected to reflect a normal sunny day as defined in Table I.\nAll other LIS units are energy sources with the maximum\nand minimum capacity as listed in Table II. The DC Link\nBus voltage reference command is set to 300 V. Switching\nmodels of DC-DC and DC-AC Converters [20] are developed\nin Simulink, which execute the real time power reference\ncommands received through Serial Communication Interface\n(SCI) from Raspberry PI modules [21]. In this study, LIS 2 is\nthe demand circulation node. The prioritization of RES is done\nby setting the capacities of LIS 2 as, pimin = PMPPT (t)\u2212 \u000f\nand pimax = PMPPT (t), for all time t, where \u000f is a small\npositive number and PMPPT is the output power of PV\nobtained by implementing an MPPT algorithm at all instants.\nThe capacities of all non-RES LIS units are listed in Table II.\nAgents are initialized as discussed in (5), (6), (7) with p = 1.\nTABLE I\nPV profile for experiment\nTime(Hrs) Power-\nOutput(kW)\n0 \u2264 t < 3 ramps up to 1kW\n3 \u2264 t < 5 1kW (Constant)\n5 \u2264 t \u2264 8 ramps down to 0\nAlgorithm 1 is executed in a distributed manner on each R-\nPI unit and a power reference command is generated approx-\nimately at every second. Delays are variable and empirically\ndelays as high as 3000 ms between R-PI units are observed\nTABLE II\nLIS Parameters used for validation\nUnit pimin(W ) pimax(W )\nLIS 1 0 1500\nLIS 2 (PV) Profile Min(t) Profile Max(t)\nLIS 3 0 1000\nLIS 4 0 1200\nLIS 5 0 1500\nLIS 6 0 2000\nLIS 1 LIS 2 LIS 3 LIS 4 LIS 5 LIS 6\n1000\n1500\n2000\n2500\n3000\nD\nel\nay\n(in\n m\ns)\n(a) (b)\nFig. 5. (a) Raspberry PI units communicating wirelessly to their\nrespective neighbors, (b) Pairwise latency in communication channels\nbetween R-PI units and their respective neighbors.\n(see Figure 5(b)). Power reference commands are generated\nupon termination of Algorithm 1 at each R-PI unit based\non the user-specified threshold \u03c1. Figure 6 shows successive\nratio consensus cycles terminated using Algorithm 1 with\neach cycle taking about 30 iterations (Figure 7) for finite\ntime termination within the given threshold. Power reference\ncommands are then dispatched by each R-PI agent through\nSCI at every minute to the power electronics interface of the\nrespective LIS unit in Simulink. The LIS units inject power\ninto the network by following the reference power commands\nas shown in Figure 8. Figure 9 and Figure 10 demonstrate RES\nprioritization of LIS 2 and auto-adjustment of contributions\nfrom non-RES LIS units. It is evident that as more (less)\nenergy from RES LIS 2 becomes available in the network, in\norder to prioritize and consume all available solar energy from\nLIS 2, the non-RES units (LIS 1, 3, 4, 5 and 6) auto-adjust\nto increase (decrease) their power injection into the network\nbased on the ratio of their capacities. A total AC power output\nof the six LIS units is 7000 W \u00b1150 W (not exactly 7000 W\ndue to termination of the algorithm based on the threshold)\nat all instants as shown in Figure 11 which is equal to the\nancillary services demanded by the grid. The DC Link voltages\n0 1 2 3\nNumber of Cycles\n0\n1\n2\n3\n4\n5\nCo\nns\nen\nsu\ns \nra\ntio\n v\nal\nue\nAgent 1 Agent 2 Agent 3 Agent 4 Agent 5 Agent 6\nFig. 6. Successive cycles of R-PI agents showing convergence of\nconsensus ratio in finite time\n30 150 300 450 600 750\nConvergence Cycle\n0.8\n0.85\n0.9\n0.95\n1\nR\nat\nio\n V\nal\nue\nFig. 7. Converged ratio values of Non-RES LIS units demonstrating\nadjustment of contributions allowing RES penetration in the network\nwith higher priority.\n1 2 3 4 5 6 7 8\nTime (Hrs)\n0\n1000\n2000\nAg\nen\nt u\npd\nat\ne \nva\nlu\nes\n (W\n)\nAgent 1 Agent 2 Agent 3 Agent 4 Agent 5 Agent 6\nFig. 8. Updated pi\u2217 values for each R-PI agent after convergence\nof consensus iterations dispatched as Reference Power Commands to\nLIS unit.\nof all LIS units is observed to be within the safe limits at all\ntime.\nIn summary, we applied the algorithm proposed for coordi-\nnation of LIS units on hardware that communicate through\nwireless channels that suffers from uncertainties, such as\ndelays, to meet the grid demand. Thus, we now have a\ncoordination algorithm which is distributed and suitable for\nreal time application.\n6. CONCLUSION\nThis paper extends the results of finite-time termination\nof ratio consensus algorithm to an application of distributed\napportioning of load in the presence of communication delays\nfor providing demand response services requested by the\ngrid. The most notable result of this paper is the completely\nFig. 9. DC Power Output of each LIS unit and RES Prioritization of LIS 2\nby self-adjustment of contributions from non-RES LIS units.\nFig. 10. AC Side Power Composition of LIS Units\nFig. 11. Total power output from LIS units delivered in response to\nancillary services requested by the grid.\ndistributed nature of the resource apportioning algorithm,\nfrom selection of communication weights to the finite time\ntermination criteria. This framework enables unique and si-\nmultaneous, yet local and independent realization of power\nreference commands by the distributed control units and a\nsubsequent coordinated action. The algorithm proposed in this\npaper also enables prioritization of Renewable Energy Sources\navailable in the power network and auto-adjustment of energy\ncontributions from other non-RES units to allow for increased\nrenewable penetration. The proposed algorithm also performs\nefficiently with time-varying ancillary service requests of the\ngrid within the limits of convergence of each consensus cycle.\nThe efficacy of the algorithm is demonstrated by hardware-in-\nthe-loop experiments using a network of Raspberry Pi agents\nas distributed control units, which dispatch the power reference\ncommands generated by the resource apportioning algorithm\nto the local power electronics interface.\nACKNOWLEDGMENT\nThe authors acknowledge Advanced Research Projects\nAgency-Energy (ARPA-E) for supporting this research through\nthe project titled \u2018A Robust Distributed Framework for Flexible\nPower Grids\u2019 via grant no. DE-AR000071 and Xcel Energy\u2019s\nRenewable Development Fund.\nREFERENCES\n[1] R. H. Lasseter and P. Piagi, \u201cMicrogrid: A conceptual solution,\u201d in Proc.\nPower Electronics Specialists Conf, vol. Vol. 6, pp. 4285\u20134290, Aachen,\nGermany, Jun 2004.\n[2] G. Joos, B. T. Ooi, D. McGillis, F. D. Galiana, and R. Marceau, \u201cThe\npotential of distributed generation to provide ancillary services,\u201d Proc.\nIEEE Power Engineering Society Summer Meeting, vol. Vol. 3, pp.\n1762\u20131767, Seattle, 2000.\n[3] G. Pepermans, J. Driesen, D. Haeseldonckx, R. Belmans, and\nW. D\u2019haeseleer, \u201cDistributed generation: definition, benefits and issues,\u201d\nEnergy Policy, vol. 33, pp. 787\u2013798, April 2005.\n[4] E. Unamuno and J. A. Barrena, \u201cHybrid ac/dc microgrids part ii: Review\nand classification of control strategies,\u201d Renewable and Sustainable\nEnergy Reviews, vol. 52, pp. 1123\u20131134, 2015.\n[5] E. Planas, A. Gil-de Muro, J. Andreu, I. Kortabarria, and I. Martinez de\nAlegria, \u201cGeneral aspects, hierarchical controls and droop methods\nin microgrids: A review,\u201d Renewable and Sustainable Energy Review,\nvol. 17, pp. 147\u2013159, 2013.\n[6] A. D. Dominguez-Garcia and C. N. Hadjicostis, \u201cCoordination and con-\ntrol of distributed energy resources for provision of ancillary services,\u201d\nin Smart Grid Communications (SmartGridComm), 2010 First IEEE\nInternational Conference on. IEEE, 2010, pp. 537\u2013542.\n[7] S. T. Cady, A. D. Dom\u00ednguez-Garc\u00eda, and C. N. Hadjicostis, \u201cFinite-\ntime approximate consensus and its application to distributed frequency\nregulation in islanded ac microgrids,\u201d in System Sciences (HICSS), 2015\n48th Hawaii International Conference on. IEEE, 2015, pp. 2664\u20132670.\n[8] V. Yadav and M. V. Salapaka, \u201cDistributed protocol for determining\nwhen averaging consensus is reached,\u201d in 45th Annual Allerton Conf,\n2007, pp. 715\u2013720.\n[9] M. Prakash, S. Talukdar, S. Attree, S. Patel, and M. Salapaka, \u201cDis-\ntributed finite time termination of ratio consensus for averaging in the\npresence of delays,\u201d arXiv preprint arXiv:1704.08297, 2017.\n[10] J. W. Stahlhut, T. J. Browne, G. T. Heydt, and V. Vittal, \u201cLatency viewed\nas a stochastic process and its impact on wide area power system control\nsignals,\u201d IEEE Transactions on Power Systems, vol. 23, pp. 84\u201391, 2008.\n[11] R. Diestel, Graph theory {graduate texts in mathematics; 173}.\nSpringer-Verlag Berlin and Heidelberg GmbH & amp, 2000.\n[12] R. A. Horn and C. R. Johnson, Eds., Matrix Analysis. New York, NY,\nUSA: Cambridge University Press, 1986.\n[13] S. Salapaka, B. Johnson, B. Lundstrom, S. Kim, S. Collyer, and\nM. Salapaka, \u201cViability and analysis of implementing only voltage-\npower droop for parallel inverter systems,\u201d IEEE Conference on Decision\nand Control, vol. 53, no. 3, pp. 3246\u20133251, 2014.\n[14] M. Baranwal, S. Salapaka, and M. Salapaka, \u201cRobust decentralized\nvoltage control of dc-dc converters with applications to power sharing\nand ripple sharing,\u201d American Control Conference, pp. 7444\u20137449,\n2016.\n[15] C. N. Hadjicostis and T. Charalambous, \u201cAverage consensus in the\npresence of delays in directed graph topologies,\u201d IEEE Transactions\non Automatic Control, vol. 59, no. 3, pp. 763\u2013768, 2014.\n[16] M. Prakash, S. Talukdar, S. Attree, V. Yadav, and M. Salapaka, \u201cDis-\ntributed finite time termination of consensus in presence of delays,\u201d\nIEEE Transactions of Automatic Control (in review), (arXiv preprint\narXiv:1701.0002), 2016.\n[17] \u201cRaspberry pi 3 model b , https://www.raspberrypi.org/products/raspberry-\npi-3-model-b/.\u201d\n[18] M. J. Lee, J. Zheng, Y.-B. Ko, and D. M. Shrestha, \u201cEmerging standards\nfor wireless mesh technology,\u201d IEEE Wireless Communications, vol. 13,\nno. 2, pp. 56\u201363, 2006.\n[19] R. Faranda and S. Leva, \u201cEnergy comparison of mppt techniques for\npv systems,\u201d WSEAS transactions on power systems, vol. 3, no. 6, pp.\n446\u2013455, 2008.\n[20] N. Mohan and T. M. Undeland, Power electronics: converters, applica-\ntions, and design. John Wiley & Sons, 2007.\n[21] A. Kurniawan, Getting Started with Matlab Simulink and Raspberry Pi.\nPE Press, 2013.\n",
      "id": 44592086,
      "identifiers": [
        {
          "identifier": "93937478",
          "type": "CORE_ID"
        },
        {
          "identifier": "467399917",
          "type": "CORE_ID"
        },
        {
          "identifier": "oai:arxiv.org:1708.06414",
          "type": "OAI_ID"
        },
        {
          "identifier": "10.1109/smartgridcomm.2017.8340735",
          "type": "DOI"
        },
        {
          "identifier": "1708.06414",
          "type": "ARXIV_ID"
        }
      ],
      "title": "Distributed Apportioning in a Power Network for providing Demand\n  Response Services",
      "language": {
        "code": "en",
        "name": "English"
      },
      "magId": null,
      "oaiIds": [
        "oai:arxiv.org:1708.06414"
      ],
      "publishedDate": "2017-08-21T01:00:00",
      "publisher": "",
      "pubmedId": null,
      "references": [],
      "sourceFulltextUrls": [
        "http://arxiv.org/abs/1708.06414"
      ],
      "updatedDate": "2021-08-10T09:38:22",
      "yearPublished": 2017,
      "journals": [],
      "links": [
        {
          "type": "download",
          "url": "http://arxiv.org/abs/1708.06414"
        },
        {
          "type": "display",
          "url": "https://core.ac.uk/works/44592086"
        }
      ]
    }
  ],
  "searchId": "cba14dd57d689e097ca4f43a4fc16a12"
}